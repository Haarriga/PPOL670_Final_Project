---
title: "Stretch02"
author: "Huixin Cai & Ming Zhou"
format: html
editor: source
---
## 1 Set up
**a. Data**
Our goal is to use individuals' social and economic characteristics (e.g. gender, age, education, race, social assistance, SNAP benefits, etc.) to predict individuals' employment status. The employment status - A_EXPLP is our target variable.
The data is Annual Social and Economic (ASEC) Supplement. It provides the usual monthly labor force data, but in addition, provides supplemental data on work experience, income, noncash benefits, and migration. Comprehensive work experience information is given on the employment status, occupation, and industry of persons 15 years old and over.
```{r}
library(tidyverse)
library(lubridate)
library(dplyr)
data <- read_csv("Data/pppub22.csv")
data1 <- data %>%
  select(A_EXPLF,MIG_REG, SPM_NUMKIDS, SPM_ACTC, SPM_BBSUBVAL,
         SPM_FAMTYPE, SPM_CAPHOUSESUB, SPM_CAPWKCCXPNS, SPM_CHILDCAREXPNS,
         A_HGA, SPM_CHILDSUPPD, SPM_EITC, A_MARITL, HEA, SPM_FEDTAX, SPM_GEOADJ,
         SPM_ENGVAL, PRDTRACE, PHIP_VAL, MCAID, NOW_MCAID, NOW_DEPNONM,
         NOW_MRKUN, MRKUN, NOW_MRK, MRK, NOW_DIR, OWNDIR, COV, COV_CYR, AGI, EIT_CRED,
         CHSP_VAL, CSP_VAL, PAW_VAL, RINT_SC2, RINT_VAL1, PTOTVAL, DIS_HP,
         DIS_CS, DIS_CS, DIS_YN, DIV_YN, DSAB_VAL, PEARNVAL, EARNER, LKWEEKS,
         LOSEWKS) 
data1$A_EXPLF <- as.character(data1$A_EXPLF)
```
**b. Split the data**
````{r}
library(tidymodels)
set.seed(20221111)
split <- initial_split(data = data1, prop = 0.8)
data_training <- training(x = split)
data_testing <- testing(x = split)
```
**c. Exploratory data analysis**
```{r}
library(dplyr)
library(ggplot2)
data_training %>%
  filter(complete.cases(.)) %>%
  ggplot(aes(x=A_EXPLF)) +
  geom_bar(aes(fill=factor(A_EXPLF))) +
  scale_fill_manual("",
                     values = c(
                       "0" = "red",
                       "1" = "blue",
                       "2" = "green")) +
  labs(y = "The number of individuals",
       x = "The employment status",
       title = "Half of individuals are not in the labor force, while the unemployment rate is about 3.3%",
       caption = "Source: census.gov") +
  theme_void()
```
**d. Explicitly pick an error metric**
False negative has higher cost (the person is unemployed but the model predicts them to be employed, in that way the budget for unemployment compensation provided by the government would not be enough), while false positive would lead to excessive budget, which does less harm.

## 2 Come up with Models 
```{r}
library(tidymodels)
#Build a recipe 
data_rec <- recipe(A_EXPLF~ ., data = data_training) %>%
  # center and scale all predictors
  step_normalize(all_predictors()) %>%
  step_corr(all_predictors())
```
**KNN**
```{r}
data_select <- data_training %>%
  select(A_HGA, A_MARITL, PRDTRACE, A_EXPLF)

data_rec <- recipe(formula = A_EXPLF~ . , data = data_select)

folds <- vfold_cv(data = data_select, v = 10)

#KNN_choose best hyperparameters
knn_mod <- nearest_neighbor(neighbors = tune()) %>%
  set_engine(engine = "kknn") %>%
  set_mode(mode = "regression")

knn_workflow <- 
  workflow() %>%
  add_model(spec = knn_mod) %>%
  add_recipe(recipe = data_rec)

knn_grid <- grid_regular(neighbors(range = c(1, 15)),
                         levels = 8)

knn_res <- 
  knn_workflow %>%
  tune_grid(resamples = folds,
            grid = knn_grid,
            control = control_grid(save_pred = TRUE))

knn_res %>%
  collect_metrics()

knn_res %>%
  select_best()


```

**Decision Tree**
```{r}
data_mod <-
  decision_tree() %>%
  set_engine(engine = "rpart") %>%
  set_mode(mode = "classification")

data_wf <- workflow() %>%
  add_recipe(data_rec) %>%
  add_model(data_mod)

data_fit <- data_wf %>%
  fit(data = data_training)
```

**Linear Regression** 
```{r}
lm_mod <- 
  linear_reg() %>%
  set_engine(engine = "lm") %>%
  set_mode(mode = "regression")

# create a workflow with the recipe and linear regression model you've created
lm_wf <- workflow() %>%
  add_recipe(ames_rec) %>%
  add_model(lm_mod) 

# fit the model by piping your workflow
lm_cv <- lm_wf %>%
  fit_resamples(resamples = folds)

```
## 3 Estimation
```{r}


```

## 4 Interpretion 
